# >> To insert to an existing array we usuappy use np.insert function this takes 4 arguements:
# >> np.insert(array to insert to, index to insert in or starting from, elements to be inserted, axis= 0 for rows or 1 for columns)
# >> the main difference between append and insert that apend adds to the end while insert inserts in a specified index.
a = np.array([1, 2, 7, 8])
ab = np.insert(a, 2, [3,4, 5, 6])
# >> array([1, 2, 3, 4, 5, 6, 7, 8])
# >> insert row
c = np.arange(1, 20, 2).reshape(5,2)
ca = [[21, 23]]
cc = np.insert(c, 1, ca, axis=0)
print(cc)
# >> array([[ 1,  3],
       [21, 23],
       [ 5,  7],
       [ 9, 11],
       [13, 15],
       [17, 19]])
      
# >> inset to a column: notice that inserting a column will insert the given values to all rows in a certain column
d = c = np.arange(1, 20, 2).reshape(5,2)
da = [[5], [6], [7], [8], [9]]
dd = np.insert(d, 1, da, axis=1)
print(dd)
# >> array([[ 1,  5,  6,  7,  8,  9,  3],
       [ 5,  5,  6,  7,  8,  9,  7],
       [ 9,  5,  6,  7,  8,  9, 11],
       [13,  5,  6,  7,  8,  9, 15],
       [17,  5,  6,  7,  8,  9, 19]])
 # >> so we gave to be careful with insert to columns.
 
